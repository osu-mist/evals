<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false" >

    <class name="edu.osu.cws.evals.models.Job" table="PYVPASJ" mutable="false" batch-size="10">
        <composite-id>
            <key-many-to-one name="employee"
                             class="edu.osu.cws.evals.models.Employee"
                             column="PYVPASJ_PIDM"
            />
            <key-property name="positionNumber" column="PYVPASJ_POSN"/>
            <key-property name="suffix" column="PYVPASJ_SUFF"/>
        </composite-id>

        <property name="status" type="string" length="1" column="PYVPASJ_STATUS"/>
        <property name="jobTitle" type="string" length="255" column="PYVPASJ_DESC"/>
        <property name="jobEcls" type="string" length="45" column="PYVPASJ_ECLS_CODE"/>
        <property name="beginDate" type="date" column="PYVPASJ_BEGIN_DATE"/>
        <property name="endDate" type="date" column="PYVPASJ_END_DATE"/>
        <property name="positionClass" type="string" length="45" column="PYVPASJ_PCLS_CODE"/>
        <property name="tsOrgCode" type="string" length="45" column="PYVPASJ_ORGN_CODE_TS"/>
        <property name="orgCodeDescription" type="string" length="45" column="PYVPASJ_ORGN_DESC"/>
        <property name="businessCenterName" type="string" length="4" column="PYVPASJ_BCTR_TITLE"/>
        <property name="appointmentType" length="45" column="PYVPASJ_APPOINTMENT_TYPE"/>
        <property name="salaryGrade" length="45" column="PYVPASJ_SAL_GRADE"/>
        <property name="salaryStep" length="3" column="PYVPASJ_SAL_STEP"/>
        <property name="trialInd" length="45" type="int" column="PYVPASJ_TRIAL_IND"/>
        <property name="annualInd" length="45" type="int" column="PYVPASJ_ANNUAL_IND"/>
        <property name="evalDate" length="45" type="timestamp" column="PYVPASJ_EVAL_DATE"/>
        <property name="salaryLow" type="double" column="PYVPASJ_LOW"/>
        <property name="salaryMidpoint" type="double" column="PYVPASJ_MIDPOINT"/>
        <property name="salaryHigh" type="double" column="PYVPASJ_HIGH"/>
        <property name="salaryCurrent" type="double" column="PYVPASJ_SALARY"/>
        <property name="salaryGrpCode" type="string" length="6" column="PYVPASJ_SGRP_CODE"/>
        <property name="rankedFlag" type="boolean" column="PYVPASJ_INCLUDE_RANKED_FLAG"/>

        <many-to-one name="supervisor" class="edu.osu.cws.evals.models.Job" not-null="false" fetch="select">
            <column name="PYVPASJ_SUPERVISOR_PIDM"/>
            <column name="PYVPASJ_SUPERVISOR_POSN"/>
            <column name="PYVPASJ_SUPERVISOR_SUFF"/>
        </many-to-one>

        <set name="appraisals" inverse="true">
            <key>
                <column name="JOB_PIDM"/>
                <column name="POSITION_NUMBER"/>
                <column name="JOB_SUFFIX"/>
            </key>
            <one-to-many class="edu.osu.cws.evals.models.Appraisal"/>
        </set>
    </class>

    <query name="job.directSupervisors"><![CDATA[
        from edu.osu.cws.evals.models.Job
        where
            supervisor.employee.id = :id and
            supervisor.positionNumber = :posno and
            supervisor.suffix = :suffix
    ]]></query>
    <query name="job.firstSupervisorJob">
        from edu.osu.cws.evals.models.Job
        where
            supervisor.employee.id = :id and
            status = 'A'
    </query>
    <query name="job.directShortJobEmployees">
        from edu.osu.cws.evals.models.Job job
        where
            job.status != 'T' and
            (job.appointmentType in (:appointmentTypes) or job.rankedFlag = true) and
            job.suffix = '00' and
            job.supervisor in (:supervisorJobs)
    </query>
    <query name="job.isUnclassifiedSupervisor">
        select
            count(*)
        from edu.osu.cws.evals.models.Job job
        where
            supervisor.employee.id = :pidm and
            status != 'T' and
            (appointmentType = :apt_type or job.rankedFlag = true)
    </query>
    <query name="job.jobsWithoutActiveEvaluations"><![CDATA[
        from edu.osu.cws.evals.models.Job
        where
            id in (:jobs) and
            id not in (
                select job.id
                from edu.osu.cws.evals.models.Appraisal appraisal
                where
                    job in (:jobs) and
                    status not in ('closed', 'archivedClosed', 'archivedCompleted')
                )
    ]]></query>
</hibernate-mapping>
